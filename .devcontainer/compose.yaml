services:
  app:
    image: ${PROJECT_NAME}
    build: .
    command: sleep infinity
    volumes:
      - ../:/workspace
      - $HOME/.config/gcloud:/root/.config/gcloud
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - NEO4J_USERNAME=${NEO4J_USERNAME}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
      - NEO4J_URI=${NEO4J_URI}
    depends_on:
      - db

  db:
    image: postgres:17.5
    ports:
      - 5432:5432
    volumes:
      - ./.postgres:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    healthcheck:
      test: ["CMD", "pg_isready -U ${DB_USER:-postgres} || exit 1"]
      interval: "5s"
      retries: 10
    restart: always
    container_name: db

  db-toolbox:
    image: db-toolbox
    build: ./.toolbox/
    ports:
      - 5000:5000
    volumes:
      - ./.toolbox:/config
    depends_on:
      - db
    restart: always
    container_name: db-toolbox

  neo4j:
    image: neo4j:5.26.13-ubi9
    ports:
      - 7474:7474
      - 7687:7687
    volumes:
      - ./.neo4j:/plugins
    environment:
      NEO4J_AUTH: "neo4j/${NEO4J_PASSWORD}"
      NEO4J_apoc_export_file_enabled: "true"
      NEO4J_apoc_import_file_enabled: "true"
      NEO4J_apoc_import_file_use__neo4j__config: "true"
      NEO4J_PLUGINS: '["apoc", "apoc-extended"]'
